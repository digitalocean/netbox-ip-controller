// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 The go-netbox Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIpamFhrpGroupAssignmentsListParams creates a new IpamFhrpGroupAssignmentsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewIpamFhrpGroupAssignmentsListParams() *IpamFhrpGroupAssignmentsListParams {
	return &IpamFhrpGroupAssignmentsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewIpamFhrpGroupAssignmentsListParamsWithTimeout creates a new IpamFhrpGroupAssignmentsListParams object
// with the ability to set a timeout on a request.
func NewIpamFhrpGroupAssignmentsListParamsWithTimeout(timeout time.Duration) *IpamFhrpGroupAssignmentsListParams {
	return &IpamFhrpGroupAssignmentsListParams{
		timeout: timeout,
	}
}

// NewIpamFhrpGroupAssignmentsListParamsWithContext creates a new IpamFhrpGroupAssignmentsListParams object
// with the ability to set a context for a request.
func NewIpamFhrpGroupAssignmentsListParamsWithContext(ctx context.Context) *IpamFhrpGroupAssignmentsListParams {
	return &IpamFhrpGroupAssignmentsListParams{
		Context: ctx,
	}
}

// NewIpamFhrpGroupAssignmentsListParamsWithHTTPClient creates a new IpamFhrpGroupAssignmentsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewIpamFhrpGroupAssignmentsListParamsWithHTTPClient(client *http.Client) *IpamFhrpGroupAssignmentsListParams {
	return &IpamFhrpGroupAssignmentsListParams{
		HTTPClient: client,
	}
}

/* IpamFhrpGroupAssignmentsListParams contains all the parameters to send to the API endpoint
   for the ipam fhrp group assignments list operation.

   Typically these are written to a http.Request.
*/
type IpamFhrpGroupAssignmentsListParams struct {

	// Created.
	Created *string

	// CreatedGte.
	CreatedGte *string

	// CreatedLte.
	CreatedLte *string

	// GroupID.
	GroupID *string

	// GroupIDn.
	GroupIDn *string

	// ID.
	ID *string

	// IDGt.
	IDGt *string

	// IDGte.
	IDGte *string

	// IDLt.
	IDLt *string

	// IDLte.
	IDLte *string

	// IDn.
	IDn *string

	// InterfaceID.
	InterfaceID *string

	// InterfaceIDGt.
	InterfaceIDGt *string

	// InterfaceIDGte.
	InterfaceIDGte *string

	// InterfaceIDLt.
	InterfaceIDLt *string

	// InterfaceIDLte.
	InterfaceIDLte *string

	// InterfaceIDn.
	InterfaceIDn *string

	// InterfaceType.
	InterfaceType *string

	// InterfaceTypen.
	InterfaceTypen *string

	// LastUpdated.
	LastUpdated *string

	// LastUpdatedGte.
	LastUpdatedGte *string

	// LastUpdatedLte.
	LastUpdatedLte *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	// Priority.
	Priority *string

	// PriorityGt.
	PriorityGt *string

	// PriorityGte.
	PriorityGte *string

	// PriorityLt.
	PriorityLt *string

	// PriorityLte.
	PriorityLte *string

	// Priorityn.
	Priorityn *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the ipam fhrp group assignments list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpamFhrpGroupAssignmentsListParams) WithDefaults() *IpamFhrpGroupAssignmentsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the ipam fhrp group assignments list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *IpamFhrpGroupAssignmentsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithTimeout(timeout time.Duration) *IpamFhrpGroupAssignmentsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithContext(ctx context.Context) *IpamFhrpGroupAssignmentsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithHTTPClient(client *http.Client) *IpamFhrpGroupAssignmentsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCreated adds the created to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithCreated(created *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetCreated(created *string) {
	o.Created = created
}

// WithCreatedGte adds the createdGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithCreatedGte(createdGte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetCreatedGte(createdGte)
	return o
}

// SetCreatedGte adds the createdGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetCreatedGte(createdGte *string) {
	o.CreatedGte = createdGte
}

// WithCreatedLte adds the createdLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithCreatedLte(createdLte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetCreatedLte(createdLte)
	return o
}

// SetCreatedLte adds the createdLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetCreatedLte(createdLte *string) {
	o.CreatedLte = createdLte
}

// WithGroupID adds the groupID to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithGroupID(groupID *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetGroupID(groupID *string) {
	o.GroupID = groupID
}

// WithGroupIDn adds the groupIDn to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithGroupIDn(groupIDn *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetGroupIDn(groupIDn)
	return o
}

// SetGroupIDn adds the groupIdN to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetGroupIDn(groupIDn *string) {
	o.GroupIDn = groupIDn
}

// WithID adds the id to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithID(id *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetID(id *string) {
	o.ID = id
}

// WithIDGt adds the iDGt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithIDGt(iDGt *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetIDGt(iDGt)
	return o
}

// SetIDGt adds the idGt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetIDGt(iDGt *string) {
	o.IDGt = iDGt
}

// WithIDGte adds the iDGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithIDGte(iDGte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetIDGte(iDGte)
	return o
}

// SetIDGte adds the idGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetIDGte(iDGte *string) {
	o.IDGte = iDGte
}

// WithIDLt adds the iDLt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithIDLt(iDLt *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetIDLt(iDLt)
	return o
}

// SetIDLt adds the idLt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetIDLt(iDLt *string) {
	o.IDLt = iDLt
}

// WithIDLte adds the iDLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithIDLte(iDLte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetIDLte(iDLte)
	return o
}

// SetIDLte adds the idLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetIDLte(iDLte *string) {
	o.IDLte = iDLte
}

// WithIDn adds the iDn to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithIDn(iDn *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetIDn(iDn)
	return o
}

// SetIDn adds the idN to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetIDn(iDn *string) {
	o.IDn = iDn
}

// WithInterfaceID adds the interfaceID to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceID(interfaceID *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceID(interfaceID)
	return o
}

// SetInterfaceID adds the interfaceId to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceID(interfaceID *string) {
	o.InterfaceID = interfaceID
}

// WithInterfaceIDGt adds the interfaceIDGt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceIDGt(interfaceIDGt *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceIDGt(interfaceIDGt)
	return o
}

// SetInterfaceIDGt adds the interfaceIdGt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceIDGt(interfaceIDGt *string) {
	o.InterfaceIDGt = interfaceIDGt
}

// WithInterfaceIDGte adds the interfaceIDGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceIDGte(interfaceIDGte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceIDGte(interfaceIDGte)
	return o
}

// SetInterfaceIDGte adds the interfaceIdGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceIDGte(interfaceIDGte *string) {
	o.InterfaceIDGte = interfaceIDGte
}

// WithInterfaceIDLt adds the interfaceIDLt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceIDLt(interfaceIDLt *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceIDLt(interfaceIDLt)
	return o
}

// SetInterfaceIDLt adds the interfaceIdLt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceIDLt(interfaceIDLt *string) {
	o.InterfaceIDLt = interfaceIDLt
}

// WithInterfaceIDLte adds the interfaceIDLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceIDLte(interfaceIDLte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceIDLte(interfaceIDLte)
	return o
}

// SetInterfaceIDLte adds the interfaceIdLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceIDLte(interfaceIDLte *string) {
	o.InterfaceIDLte = interfaceIDLte
}

// WithInterfaceIDn adds the interfaceIDn to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceIDn(interfaceIDn *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceIDn(interfaceIDn)
	return o
}

// SetInterfaceIDn adds the interfaceIdN to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceIDn(interfaceIDn *string) {
	o.InterfaceIDn = interfaceIDn
}

// WithInterfaceType adds the interfaceType to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceType(interfaceType *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceType(interfaceType)
	return o
}

// SetInterfaceType adds the interfaceType to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceType(interfaceType *string) {
	o.InterfaceType = interfaceType
}

// WithInterfaceTypen adds the interfaceTypen to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithInterfaceTypen(interfaceTypen *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetInterfaceTypen(interfaceTypen)
	return o
}

// SetInterfaceTypen adds the interfaceTypeN to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetInterfaceTypen(interfaceTypen *string) {
	o.InterfaceTypen = interfaceTypen
}

// WithLastUpdated adds the lastUpdated to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithLastUpdated(lastUpdated *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetLastUpdated(lastUpdated)
	return o
}

// SetLastUpdated adds the lastUpdated to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetLastUpdated(lastUpdated *string) {
	o.LastUpdated = lastUpdated
}

// WithLastUpdatedGte adds the lastUpdatedGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithLastUpdatedGte(lastUpdatedGte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetLastUpdatedGte(lastUpdatedGte)
	return o
}

// SetLastUpdatedGte adds the lastUpdatedGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetLastUpdatedGte(lastUpdatedGte *string) {
	o.LastUpdatedGte = lastUpdatedGte
}

// WithLastUpdatedLte adds the lastUpdatedLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithLastUpdatedLte(lastUpdatedLte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetLastUpdatedLte(lastUpdatedLte)
	return o
}

// SetLastUpdatedLte adds the lastUpdatedLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetLastUpdatedLte(lastUpdatedLte *string) {
	o.LastUpdatedLte = lastUpdatedLte
}

// WithLimit adds the limit to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithLimit(limit *int64) *IpamFhrpGroupAssignmentsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithOffset adds the offset to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithOffset(offset *int64) *IpamFhrpGroupAssignmentsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithPriority adds the priority to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithPriority(priority *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetPriority(priority)
	return o
}

// SetPriority adds the priority to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetPriority(priority *string) {
	o.Priority = priority
}

// WithPriorityGt adds the priorityGt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithPriorityGt(priorityGt *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetPriorityGt(priorityGt)
	return o
}

// SetPriorityGt adds the priorityGt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetPriorityGt(priorityGt *string) {
	o.PriorityGt = priorityGt
}

// WithPriorityGte adds the priorityGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithPriorityGte(priorityGte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetPriorityGte(priorityGte)
	return o
}

// SetPriorityGte adds the priorityGte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetPriorityGte(priorityGte *string) {
	o.PriorityGte = priorityGte
}

// WithPriorityLt adds the priorityLt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithPriorityLt(priorityLt *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetPriorityLt(priorityLt)
	return o
}

// SetPriorityLt adds the priorityLt to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetPriorityLt(priorityLt *string) {
	o.PriorityLt = priorityLt
}

// WithPriorityLte adds the priorityLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithPriorityLte(priorityLte *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetPriorityLte(priorityLte)
	return o
}

// SetPriorityLte adds the priorityLte to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetPriorityLte(priorityLte *string) {
	o.PriorityLte = priorityLte
}

// WithPriorityn adds the priorityn to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) WithPriorityn(priorityn *string) *IpamFhrpGroupAssignmentsListParams {
	o.SetPriorityn(priorityn)
	return o
}

// SetPriorityn adds the priorityN to the ipam fhrp group assignments list params
func (o *IpamFhrpGroupAssignmentsListParams) SetPriorityn(priorityn *string) {
	o.Priorityn = priorityn
}

// WriteToRequest writes these params to a swagger request
func (o *IpamFhrpGroupAssignmentsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Created != nil {

		// query param created
		var qrCreated string

		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated
		if qCreated != "" {

			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}
	}

	if o.CreatedGte != nil {

		// query param created__gte
		var qrCreatedGte string

		if o.CreatedGte != nil {
			qrCreatedGte = *o.CreatedGte
		}
		qCreatedGte := qrCreatedGte
		if qCreatedGte != "" {

			if err := r.SetQueryParam("created__gte", qCreatedGte); err != nil {
				return err
			}
		}
	}

	if o.CreatedLte != nil {

		// query param created__lte
		var qrCreatedLte string

		if o.CreatedLte != nil {
			qrCreatedLte = *o.CreatedLte
		}
		qCreatedLte := qrCreatedLte
		if qCreatedLte != "" {

			if err := r.SetQueryParam("created__lte", qCreatedLte); err != nil {
				return err
			}
		}
	}

	if o.GroupID != nil {

		// query param group_id
		var qrGroupID string

		if o.GroupID != nil {
			qrGroupID = *o.GroupID
		}
		qGroupID := qrGroupID
		if qGroupID != "" {

			if err := r.SetQueryParam("group_id", qGroupID); err != nil {
				return err
			}
		}
	}

	if o.GroupIDn != nil {

		// query param group_id__n
		var qrGroupIDn string

		if o.GroupIDn != nil {
			qrGroupIDn = *o.GroupIDn
		}
		qGroupIDn := qrGroupIDn
		if qGroupIDn != "" {

			if err := r.SetQueryParam("group_id__n", qGroupIDn); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID string

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := qrID
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.IDGt != nil {

		// query param id__gt
		var qrIDGt string

		if o.IDGt != nil {
			qrIDGt = *o.IDGt
		}
		qIDGt := qrIDGt
		if qIDGt != "" {

			if err := r.SetQueryParam("id__gt", qIDGt); err != nil {
				return err
			}
		}
	}

	if o.IDGte != nil {

		// query param id__gte
		var qrIDGte string

		if o.IDGte != nil {
			qrIDGte = *o.IDGte
		}
		qIDGte := qrIDGte
		if qIDGte != "" {

			if err := r.SetQueryParam("id__gte", qIDGte); err != nil {
				return err
			}
		}
	}

	if o.IDLt != nil {

		// query param id__lt
		var qrIDLt string

		if o.IDLt != nil {
			qrIDLt = *o.IDLt
		}
		qIDLt := qrIDLt
		if qIDLt != "" {

			if err := r.SetQueryParam("id__lt", qIDLt); err != nil {
				return err
			}
		}
	}

	if o.IDLte != nil {

		// query param id__lte
		var qrIDLte string

		if o.IDLte != nil {
			qrIDLte = *o.IDLte
		}
		qIDLte := qrIDLte
		if qIDLte != "" {

			if err := r.SetQueryParam("id__lte", qIDLte); err != nil {
				return err
			}
		}
	}

	if o.IDn != nil {

		// query param id__n
		var qrIDn string

		if o.IDn != nil {
			qrIDn = *o.IDn
		}
		qIDn := qrIDn
		if qIDn != "" {

			if err := r.SetQueryParam("id__n", qIDn); err != nil {
				return err
			}
		}
	}

	if o.InterfaceID != nil {

		// query param interface_id
		var qrInterfaceID string

		if o.InterfaceID != nil {
			qrInterfaceID = *o.InterfaceID
		}
		qInterfaceID := qrInterfaceID
		if qInterfaceID != "" {

			if err := r.SetQueryParam("interface_id", qInterfaceID); err != nil {
				return err
			}
		}
	}

	if o.InterfaceIDGt != nil {

		// query param interface_id__gt
		var qrInterfaceIDGt string

		if o.InterfaceIDGt != nil {
			qrInterfaceIDGt = *o.InterfaceIDGt
		}
		qInterfaceIDGt := qrInterfaceIDGt
		if qInterfaceIDGt != "" {

			if err := r.SetQueryParam("interface_id__gt", qInterfaceIDGt); err != nil {
				return err
			}
		}
	}

	if o.InterfaceIDGte != nil {

		// query param interface_id__gte
		var qrInterfaceIDGte string

		if o.InterfaceIDGte != nil {
			qrInterfaceIDGte = *o.InterfaceIDGte
		}
		qInterfaceIDGte := qrInterfaceIDGte
		if qInterfaceIDGte != "" {

			if err := r.SetQueryParam("interface_id__gte", qInterfaceIDGte); err != nil {
				return err
			}
		}
	}

	if o.InterfaceIDLt != nil {

		// query param interface_id__lt
		var qrInterfaceIDLt string

		if o.InterfaceIDLt != nil {
			qrInterfaceIDLt = *o.InterfaceIDLt
		}
		qInterfaceIDLt := qrInterfaceIDLt
		if qInterfaceIDLt != "" {

			if err := r.SetQueryParam("interface_id__lt", qInterfaceIDLt); err != nil {
				return err
			}
		}
	}

	if o.InterfaceIDLte != nil {

		// query param interface_id__lte
		var qrInterfaceIDLte string

		if o.InterfaceIDLte != nil {
			qrInterfaceIDLte = *o.InterfaceIDLte
		}
		qInterfaceIDLte := qrInterfaceIDLte
		if qInterfaceIDLte != "" {

			if err := r.SetQueryParam("interface_id__lte", qInterfaceIDLte); err != nil {
				return err
			}
		}
	}

	if o.InterfaceIDn != nil {

		// query param interface_id__n
		var qrInterfaceIDn string

		if o.InterfaceIDn != nil {
			qrInterfaceIDn = *o.InterfaceIDn
		}
		qInterfaceIDn := qrInterfaceIDn
		if qInterfaceIDn != "" {

			if err := r.SetQueryParam("interface_id__n", qInterfaceIDn); err != nil {
				return err
			}
		}
	}

	if o.InterfaceType != nil {

		// query param interface_type
		var qrInterfaceType string

		if o.InterfaceType != nil {
			qrInterfaceType = *o.InterfaceType
		}
		qInterfaceType := qrInterfaceType
		if qInterfaceType != "" {

			if err := r.SetQueryParam("interface_type", qInterfaceType); err != nil {
				return err
			}
		}
	}

	if o.InterfaceTypen != nil {

		// query param interface_type__n
		var qrInterfaceTypen string

		if o.InterfaceTypen != nil {
			qrInterfaceTypen = *o.InterfaceTypen
		}
		qInterfaceTypen := qrInterfaceTypen
		if qInterfaceTypen != "" {

			if err := r.SetQueryParam("interface_type__n", qInterfaceTypen); err != nil {
				return err
			}
		}
	}

	if o.LastUpdated != nil {

		// query param last_updated
		var qrLastUpdated string

		if o.LastUpdated != nil {
			qrLastUpdated = *o.LastUpdated
		}
		qLastUpdated := qrLastUpdated
		if qLastUpdated != "" {

			if err := r.SetQueryParam("last_updated", qLastUpdated); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedGte != nil {

		// query param last_updated__gte
		var qrLastUpdatedGte string

		if o.LastUpdatedGte != nil {
			qrLastUpdatedGte = *o.LastUpdatedGte
		}
		qLastUpdatedGte := qrLastUpdatedGte
		if qLastUpdatedGte != "" {

			if err := r.SetQueryParam("last_updated__gte", qLastUpdatedGte); err != nil {
				return err
			}
		}
	}

	if o.LastUpdatedLte != nil {

		// query param last_updated__lte
		var qrLastUpdatedLte string

		if o.LastUpdatedLte != nil {
			qrLastUpdatedLte = *o.LastUpdatedLte
		}
		qLastUpdatedLte := qrLastUpdatedLte
		if qLastUpdatedLte != "" {

			if err := r.SetQueryParam("last_updated__lte", qLastUpdatedLte); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Priority != nil {

		// query param priority
		var qrPriority string

		if o.Priority != nil {
			qrPriority = *o.Priority
		}
		qPriority := qrPriority
		if qPriority != "" {

			if err := r.SetQueryParam("priority", qPriority); err != nil {
				return err
			}
		}
	}

	if o.PriorityGt != nil {

		// query param priority__gt
		var qrPriorityGt string

		if o.PriorityGt != nil {
			qrPriorityGt = *o.PriorityGt
		}
		qPriorityGt := qrPriorityGt
		if qPriorityGt != "" {

			if err := r.SetQueryParam("priority__gt", qPriorityGt); err != nil {
				return err
			}
		}
	}

	if o.PriorityGte != nil {

		// query param priority__gte
		var qrPriorityGte string

		if o.PriorityGte != nil {
			qrPriorityGte = *o.PriorityGte
		}
		qPriorityGte := qrPriorityGte
		if qPriorityGte != "" {

			if err := r.SetQueryParam("priority__gte", qPriorityGte); err != nil {
				return err
			}
		}
	}

	if o.PriorityLt != nil {

		// query param priority__lt
		var qrPriorityLt string

		if o.PriorityLt != nil {
			qrPriorityLt = *o.PriorityLt
		}
		qPriorityLt := qrPriorityLt
		if qPriorityLt != "" {

			if err := r.SetQueryParam("priority__lt", qPriorityLt); err != nil {
				return err
			}
		}
	}

	if o.PriorityLte != nil {

		// query param priority__lte
		var qrPriorityLte string

		if o.PriorityLte != nil {
			qrPriorityLte = *o.PriorityLte
		}
		qPriorityLte := qrPriorityLte
		if qPriorityLte != "" {

			if err := r.SetQueryParam("priority__lte", qPriorityLte); err != nil {
				return err
			}
		}
	}

	if o.Priorityn != nil {

		// query param priority__n
		var qrPriorityn string

		if o.Priorityn != nil {
			qrPriorityn = *o.Priorityn
		}
		qPriorityn := qrPriorityn
		if qPriorityn != "" {

			if err := r.SetQueryParam("priority__n", qPriorityn); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
